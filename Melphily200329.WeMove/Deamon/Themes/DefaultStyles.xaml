<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:uicoreattached="clr-namespace:Deamon.UiCore.AttachedProperties"
                    xmlns:local="clr-namespace:Deamon.Themes">

    <SolidColorBrush x:Key="LightBackground" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="SecondLightBackground" Color="#FFF8F8F8"/>
    <SolidColorBrush x:Key="ThirdLightBackground" Color="#FFeeeeee"/>
    <SolidColorBrush x:Key="DarkForeground" Color="#FF000000"/>
    <SolidColorBrush x:Key="LightForeground" Color="#FFFFFFFF"/>

    <Color x:Key="SpeciBlueColor" >#FF053f4b</Color>
    <SolidColorBrush x:Key="SpeciColorBlueBrush" Color="{StaticResource SpeciBlueColor}"/>
    <Color x:Key="SpeciPurpleColor" >#FF290736</Color>
    <SolidColorBrush x:Key="SpeciColorPurpleBrush" Color="{StaticResource SpeciPurpleColor}"/>

    <LinearGradientBrush x:Key="SpeciVerticalLinearBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="{StaticResource SpeciPurpleColor}"/>
        <GradientStop Color="{StaticResource SpeciBlueColor}" Offset="1"/>
    </LinearGradientBrush>

    <DrawingBrush x:Key="GridDrawingBrush" Opacity="0.25"
      Viewport="0,0,10,10" ViewportUnits="Absolute" TileMode="Tile">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <DrawingGroup.Children>
                    <GeometryDrawing Geometry="M0,0 L1,0 1,1 0,1z" Brush="White" />
                    <GeometryDrawing Brush="#9999FF">
                        <GeometryDrawing.Geometry>
                            <GeometryGroup>
                                <RectangleGeometry Rect="0,0,1,0.1" />
                                <RectangleGeometry Rect="0,0.1,0.1,0.9" />
                            </GeometryGroup>
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>
                </DrawingGroup.Children>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>



    <Style TargetType="{x:Type Button}" x:Key="CloseButton">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Foreground" Value="#FF000000" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid"
                          Background="{TemplateBinding Background}"
                          MinHeight="36"
                          MinWidth="36">
                        <Path x:Name="icon"
                              Width="15"
                              Height="15"
                              Fill="{TemplateBinding Foreground}"
                              Stretch="Uniform"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                                  RenderTransformOrigin="0.5 0.5"
                              Opacity="0.8">
                            <Path.Data>
                                <GeometryGroup FillRule="Nonzero">
                                    <RectangleGeometry Rect="0 7 15 1"/>
                                    <RectangleGeometry Rect="7 0 1 15"/>
                                </GeometryGroup>
                            </Path.Data>
                            <Path.LayoutTransform>
                                <TransformGroup>
                                    <ScaleTransform x:Name="IconScale"/>
                                    <RotateTransform x:Name="IconRotate" Angle="45"/>
                                </TransformGroup>
                            </Path.LayoutTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#FF000000" />
                            <Setter Property="Opacity" TargetName="icon" Value="1"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IconScale"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         To="1.2"
                                                         Duration="0:0:0.15" />
                                        <DoubleAnimation Storyboard.TargetName="IconScale"
                                                         Storyboard.TargetProperty="ScaleY"
                                                         To="1.2"
                                                         Duration="0:0:0.15" />
                                        <DoubleAnimation Storyboard.TargetName="IconRotate"
                                                         Storyboard.TargetProperty="Angle"
                                                         To="-45"
                                                         Duration="0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IconScale"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         To="1"
                                                         Duration="0:0:0.15" />
                                        <DoubleAnimation Storyboard.TargetName="IconScale"
                                                         Storyboard.TargetProperty="ScaleY"
                                                         To="1"
                                                         Duration="0:0:0.15" />
                                        <DoubleAnimation Storyboard.TargetName="IconRotate"
                                                         Storyboard.TargetProperty="Angle"
                                                         To="45"
                                                         Duration="0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource SpeciColorBlueBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#99000000" />
                            <Setter TargetName="icon" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="MinimButton">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Foreground" Value="#FF000000" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="grid"
                          Background="{TemplateBinding Background}"
                          MinHeight="36"
                          MinWidth="36">
                        <Path x:Name="icon"
                              Width="15"
                              Height="15"
                              Fill="{TemplateBinding Foreground}"
                              Stretch="Uniform"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                                  RenderTransformOrigin="0.5 0.5"
                              Opacity="0.8">
                            <Path.Data>
                                <GeometryGroup FillRule="Nonzero">
                                    <RectangleGeometry Rect="0 0 15 1"/>
                                </GeometryGroup>
                            </Path.Data>
                            <Path.LayoutTransform>
                                <TransformGroup>
                                    <ScaleTransform x:Name="IconScale"/>
                                </TransformGroup>
                            </Path.LayoutTransform>
                            <Path.RenderTransform>
                                <TranslateTransform x:Name="IconTranslate" X="0" Y="1"/>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="#FF000000" />
                            <Setter Property="Opacity" TargetName="icon" Value="1"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IconScale"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         To="1.2"
                                                         Duration="0:0:0.15" />
                                        <DoubleAnimation Storyboard.TargetName="IconScale"
                                                         Storyboard.TargetProperty="ScaleY"
                                                         To="1.2"
                                                         Duration="0:0:0.15" />
                                        <DoubleAnimation Storyboard.TargetName="IconTranslate"
                                                         Storyboard.TargetProperty="Y" 
                                                         To="6"
                                                         Duration="0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="IconScale"
                                                         Storyboard.TargetProperty="ScaleX"
                                                         To="1"
                                                         Duration="0:0:0.15" />
                                        <DoubleAnimation Storyboard.TargetName="IconScale"
                                                         Storyboard.TargetProperty="ScaleY"
                                                         To="1"
                                                         Duration="0:0:0.15" />
                                        <DoubleAnimation Storyboard.TargetName="IconTranslate"
                                                         Storyboard.TargetProperty="Y"
                                                         To="1"
                                                         Duration="0:0:0.15" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource SpeciColorBlueBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#99000000" />
                            <Setter TargetName="icon" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="EmailTextBox">

        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="#55290736" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="TextBlock.FontFamily" Value="Microsoft YaHei UI" />
        <Setter Property="TextBlock.FontWeight" Value="Regular" />
        <Setter Property="Background" Value="{StaticResource LightBackground}" />
        <Setter Property="Foreground" Value="{StaticResource DarkForeground}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">

                    <Grid>

                        <Border x:Name="border" 
                                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Background="{TemplateBinding Background}"
                                                    SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <TextBlock IsHitTestVisible="False"
                                                       Text="{TemplateBinding Tag}" 
                                                               FontSize="{TemplateBinding FontSize}"
                                                               Margin="3 0 0 0"
                                                       x:Name="placeholder"
                                       FontWeight="Light"
                                                       Padding="{TemplateBinding Padding}"
                                                       VerticalAlignment="Center" Opacity="0.5"
                                                       HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                                       Foreground="{StaticResource DarkForeground}"
                                                       >
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>

                        </TextBlock>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SpeciColorBlueBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SpeciColorPurpleBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style TargetType="{x:Type PasswordBox}" x:Key="EnterPasswordBox">

        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="#55290736" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="TextBlock.FontFamily" Value="Microsoft YaHei UI" />
        <Setter Property="TextBlock.FontWeight" Value="Regular" />
        <Setter Property="Background" Value="{StaticResource LightBackground}" />
        <Setter Property="Foreground" Value="{StaticResource DarkForeground}" />
        <Setter Property="uicoreattached:NeedCaptureProperty.Value" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">

                    <Grid>

                        <Border x:Name="border" 
                                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Background="{TemplateBinding Background}"
                                                    SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>

                        <TextBlock IsHitTestVisible="False"
                                                       Text="{TemplateBinding Tag}" 
                                                               FontSize="{TemplateBinding FontSize}"
                                                               Margin="3 0 0 0"
                                                       x:Name="placeholder"
                                       FontWeight="Light"
                                                       Padding="{TemplateBinding Padding}"
                                                       VerticalAlignment="Center" Opacity="0.5"
                                                       HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                                       Foreground="{StaticResource DarkForeground}"
                                                                   Visibility="{TemplateBinding uicoreattached:HasPasswordProperty.Value,Converter= {StaticResource BoolToVisibility},ConverterParameter=True}"
                                                       >
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}" Value="">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>

                        </TextBlock>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SpeciColorBlueBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SpeciColorPurpleBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>



    <Style TargetType="{x:Type CheckBox}" x:Key="RememberCheckBox">
        <Setter Property="Background" Value="{StaticResource LightBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource SpeciVerticalLinearBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource DarkForeground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="18" />
        <Setter Property="TextBlock.FontFamily" Value="Microsoft YaHei UI" />
        <Setter Property="TextBlock.FontWeight" Value="Light" />
        <Setter Property="Opacity" Value="0.8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">

                            <Viewbox Width="{TemplateBinding FontSize}" Height="{TemplateBinding FontSize}">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource SpeciVerticalLinearBrush}" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource SpeciVerticalLinearBrush}" Margin="2" Opacity="0"/>
                                </Grid>
                            </Viewbox>

                        </Border>
                        <TextBlock Text="{TemplateBinding Content}" x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>


                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Padding" Value="10,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" Value="0.9"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="SignButton">
        <Setter Property="Background" Value="{StaticResource SpeciVerticalLinearBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource SpeciColorBlueBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource LightForeground}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="FontSize" Value="25" />
        <Setter Property="TextBlock.FontFamily" Value="Microsoft YaHei UI" />
        <Setter Property="TextBlock.FontWeight" Value="Light" />
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="uicoreattached:IsBusyProperty.Value" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Border>

                        <Grid Background="{TemplateBinding Background}">
                            <TextBlock Visibility="{TemplateBinding uicoreattached:IsBusyProperty.Value,Converter={StaticResource BoolToVisibility},ConverterParameter=True}"
                                    
                                    Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}" x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>


                            <TextBlock Visibility="{TemplateBinding uicoreattached:IsBusyProperty.Value,Converter={StaticResource BoolToVisibility}}"
                                           Foreground="{TemplateBinding Foreground}" x:Name="SpinText" >
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">

                                        <Setter Property="FontFamily" Value="宋体" />
                                        <Setter Property="FontSize" Value="20" />
                                        <Setter Property="Text" Value="◆" />
                                        <Setter Property="HorizontalAlignment" Value="Center"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
                                        <Setter Property="RenderTransform">
                                            <Setter.Value>
                                                <RotateTransform></RotateTransform>
                                            </Setter.Value>
                                        </Setter>

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard Name="SpinStoryboard" >
                                                        <Storyboard>
                                                            <DoubleAnimation
                                                                                    Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                                                    From="0"
                                                                                    To="360"
                                                                                    Duration="0:0:1"
                                                                                    RepeatBehavior="Forever" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <RemoveStoryboard BeginStoryboardName="SpinStoryboard" />
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </Style.Triggers>

                                    </Style>

                                </TextBlock.Style>




                            </TextBlock>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity"  Value="0.9"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Opacity"  Value="0.6"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity"  Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="OnlyTextButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource SpeciVerticalLinearBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="FontSize" Value="18" />
        <Setter Property="TextBlock.FontFamily" Value="Microsoft YaHei UI" />
        <Setter Property="TextBlock.FontWeight" Value="Regular" />
        <Setter Property="Opacity" Value="0.8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Opacity" Value="0.7"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>